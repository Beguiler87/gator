// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: 003_feedlists.sql

package database

import (
	"context"
	"database/sql"
)

const listFeedsWithCreators = `-- name: ListFeedsWithCreators :many
SELECT feed.name AS feed_name, feed.url, users.name AS user_name
FROM feed
LEFT JOIN users ON feed.user_id = users.id
`

type ListFeedsWithCreatorsRow struct {
	FeedName sql.NullString
	Url      sql.NullString
	UserName sql.NullString
}

func (q *Queries) ListFeedsWithCreators(ctx context.Context) ([]ListFeedsWithCreatorsRow, error) {
	rows, err := q.db.QueryContext(ctx, listFeedsWithCreators)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []ListFeedsWithCreatorsRow
	for rows.Next() {
		var i ListFeedsWithCreatorsRow
		if err := rows.Scan(&i.FeedName, &i.Url, &i.UserName); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
